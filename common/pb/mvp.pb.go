// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: common/pb/mvp.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AddGoodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodName string  `protobuf:"bytes,1,opt,name=goodName,proto3" json:"goodName,omitempty"`
	Price    float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *AddGoodReq) Reset() {
	*x = AddGoodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGoodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGoodReq) ProtoMessage() {}

func (x *AddGoodReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGoodReq.ProtoReflect.Descriptor instead.
func (*AddGoodReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{0}
}

func (x *AddGoodReq) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *AddGoodReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type AddGoodRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddGoodRes) Reset() {
	*x = AddGoodRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGoodRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGoodRes) ProtoMessage() {}

func (x *AddGoodRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGoodRes.ProtoReflect.Descriptor instead.
func (*AddGoodRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{1}
}

type SellGoodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodName  string  `protobuf:"bytes,1,opt,name=goodName,proto3" json:"goodName,omitempty"`
	SellPrice float32 `protobuf:"fixed32,2,opt,name=sellPrice,proto3" json:"sellPrice,omitempty"`
}

func (x *SellGoodReq) Reset() {
	*x = SellGoodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellGoodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellGoodReq) ProtoMessage() {}

func (x *SellGoodReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellGoodReq.ProtoReflect.Descriptor instead.
func (*SellGoodReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{2}
}

func (x *SellGoodReq) GetGoodName() string {
	if x != nil {
		return x.GoodName
	}
	return ""
}

func (x *SellGoodReq) GetSellPrice() float32 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

type SellGoodRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SellGoodRes) Reset() {
	*x = SellGoodRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellGoodRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellGoodRes) ProtoMessage() {}

func (x *SellGoodRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellGoodRes.ProtoReflect.Descriptor instead.
func (*SellGoodRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{3}
}

type AddBilliardDeskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BilliardDeskName string `protobuf:"bytes,1,opt,name=billiardDeskName,proto3" json:"billiardDeskName,omitempty"`
}

func (x *AddBilliardDeskReq) Reset() {
	*x = AddBilliardDeskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBilliardDeskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBilliardDeskReq) ProtoMessage() {}

func (x *AddBilliardDeskReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBilliardDeskReq.ProtoReflect.Descriptor instead.
func (*AddBilliardDeskReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{4}
}

func (x *AddBilliardDeskReq) GetBilliardDeskName() string {
	if x != nil {
		return x.BilliardDeskName
	}
	return ""
}

type AddBilliardDeskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBilliardDeskRes) Reset() {
	*x = AddBilliardDeskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBilliardDeskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBilliardDeskRes) ProtoMessage() {}

func (x *AddBilliardDeskRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBilliardDeskRes.ProtoReflect.Descriptor instead.
func (*AddBilliardDeskRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{5}
}

type BeginPlayBilliardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BilliardDeskName   string `protobuf:"bytes,1,opt,name=billiardDeskName,proto3" json:"billiardDeskName,omitempty"`
	BeginPlayTimestamp int64  `protobuf:"varint,2,opt,name=beginPlayTimestamp,proto3" json:"beginPlayTimestamp,omitempty"`
}

func (x *BeginPlayBilliardReq) Reset() {
	*x = BeginPlayBilliardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginPlayBilliardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginPlayBilliardReq) ProtoMessage() {}

func (x *BeginPlayBilliardReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginPlayBilliardReq.ProtoReflect.Descriptor instead.
func (*BeginPlayBilliardReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{6}
}

func (x *BeginPlayBilliardReq) GetBilliardDeskName() string {
	if x != nil {
		return x.BilliardDeskName
	}
	return ""
}

func (x *BeginPlayBilliardReq) GetBeginPlayTimestamp() int64 {
	if x != nil {
		return x.BeginPlayTimestamp
	}
	return 0
}

type BeginPlayBilliardRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginPlayBilliardRes) Reset() {
	*x = BeginPlayBilliardRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginPlayBilliardRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginPlayBilliardRes) ProtoMessage() {}

func (x *BeginPlayBilliardRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginPlayBilliardRes.ProtoReflect.Descriptor instead.
func (*BeginPlayBilliardRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{7}
}

type StopPlayBilliardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BilliardDeskName   string `protobuf:"bytes,1,opt,name=billiardDeskName,proto3" json:"billiardDeskName,omitempty"`
	BeginPlayTimestamp int64  `protobuf:"varint,2,opt,name=beginPlayTimestamp,proto3" json:"beginPlayTimestamp,omitempty"`
	StopPlayTimestamp  int64  `protobuf:"varint,3,opt,name=stopPlayTimestamp,proto3" json:"stopPlayTimestamp,omitempty"`
}

func (x *StopPlayBilliardReq) Reset() {
	*x = StopPlayBilliardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPlayBilliardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPlayBilliardReq) ProtoMessage() {}

func (x *StopPlayBilliardReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPlayBilliardReq.ProtoReflect.Descriptor instead.
func (*StopPlayBilliardReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{8}
}

func (x *StopPlayBilliardReq) GetBilliardDeskName() string {
	if x != nil {
		return x.BilliardDeskName
	}
	return ""
}

func (x *StopPlayBilliardReq) GetBeginPlayTimestamp() int64 {
	if x != nil {
		return x.BeginPlayTimestamp
	}
	return 0
}

func (x *StopPlayBilliardReq) GetStopPlayTimestamp() int64 {
	if x != nil {
		return x.StopPlayTimestamp
	}
	return 0
}

type StopPlayBilliardRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopPlayBilliardRes) Reset() {
	*x = StopPlayBilliardRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPlayBilliardRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPlayBilliardRes) ProtoMessage() {}

func (x *StopPlayBilliardRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPlayBilliardRes.ProtoReflect.Descriptor instead.
func (*StopPlayBilliardRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{9}
}

type AttachGood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AttachGood) Reset() {
	*x = AttachGood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachGood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachGood) ProtoMessage() {}

func (x *AttachGood) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachGood.ProtoReflect.Descriptor instead.
func (*AttachGood) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{10}
}

func (x *AttachGood) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Good struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AttachGoods []*AttachGood `protobuf:"bytes,2,rep,name=attachGoods,proto3" json:"attachGoods,omitempty"`
}

func (x *Good) Reset() {
	*x = Good{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Good) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Good) ProtoMessage() {}

func (x *Good) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Good.ProtoReflect.Descriptor instead.
func (*Good) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{11}
}

func (x *Good) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Good) GetAttachGoods() []*AttachGood {
	if x != nil {
		return x.AttachGoods
	}
	return nil
}

type OrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods []*Good `protobuf:"bytes,1,rep,name=goods,proto3" json:"goods,omitempty"`
}

func (x *OrderReq) Reset() {
	*x = OrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReq) ProtoMessage() {}

func (x *OrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReq.ProtoReflect.Descriptor instead.
func (*OrderReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{12}
}

func (x *OrderReq) GetGoods() []*Good {
	if x != nil {
		return x.Goods
	}
	return nil
}

type OrderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID int64 `protobuf:"varint,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
}

func (x *OrderRes) Reset() {
	*x = OrderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRes) ProtoMessage() {}

func (x *OrderRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRes.ProtoReflect.Descriptor instead.
func (*OrderRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{13}
}

func (x *OrderRes) GetOrderID() int64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

type GetOrderGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID int64 `protobuf:"varint,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
}

func (x *GetOrderGoodsReq) Reset() {
	*x = GetOrderGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderGoodsReq) ProtoMessage() {}

func (x *GetOrderGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderGoodsReq.ProtoReflect.Descriptor instead.
func (*GetOrderGoodsReq) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{14}
}

func (x *GetOrderGoodsReq) GetOrderID() int64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

type GetOrderGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods []*Good `protobuf:"bytes,1,rep,name=goods,proto3" json:"goods,omitempty"`
}

func (x *GetOrderGoodsRes) Reset() {
	*x = GetOrderGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_mvp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderGoodsRes) ProtoMessage() {}

func (x *GetOrderGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_mvp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderGoodsRes.ProtoReflect.Descriptor instead.
func (*GetOrderGoodsRes) Descriptor() ([]byte, []int) {
	return file_common_pb_mvp_proto_rawDescGZIP(), []int{15}
}

func (x *GetOrderGoodsRes) GetGoods() []*Good {
	if x != nil {
		return x.Goods
	}
	return nil
}

var File_common_pb_mvp_proto protoreflect.FileDescriptor

var file_common_pb_mvp_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x76, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x3e, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x6c, 0x47,
	0x6f, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x22,
	0x40, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x2a, 0x0a, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x16, 0x0a, 0x14, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x70, 0x50,
	0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61,
	0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x0a,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2c,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x32, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x32, 0x92, 0x03, 0x0a, 0x03, 0x4d, 0x76, 0x70, 0x12, 0x29, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x47,
	0x6f, 0x6f, 0x64, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x73, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f,
	0x6f, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x47, 0x6f, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a,
	0x10, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72,
	0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_pb_mvp_proto_rawDescOnce sync.Once
	file_common_pb_mvp_proto_rawDescData = file_common_pb_mvp_proto_rawDesc
)

func file_common_pb_mvp_proto_rawDescGZIP() []byte {
	file_common_pb_mvp_proto_rawDescOnce.Do(func() {
		file_common_pb_mvp_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_pb_mvp_proto_rawDescData)
	})
	return file_common_pb_mvp_proto_rawDescData
}

var file_common_pb_mvp_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_common_pb_mvp_proto_goTypes = []interface{}{
	(*AddGoodReq)(nil),           // 0: pb.AddGoodReq
	(*AddGoodRes)(nil),           // 1: pb.AddGoodRes
	(*SellGoodReq)(nil),          // 2: pb.SellGoodReq
	(*SellGoodRes)(nil),          // 3: pb.SellGoodRes
	(*AddBilliardDeskReq)(nil),   // 4: pb.AddBilliardDeskReq
	(*AddBilliardDeskRes)(nil),   // 5: pb.AddBilliardDeskRes
	(*BeginPlayBilliardReq)(nil), // 6: pb.BeginPlayBilliardReq
	(*BeginPlayBilliardRes)(nil), // 7: pb.BeginPlayBilliardRes
	(*StopPlayBilliardReq)(nil),  // 8: pb.StopPlayBilliardReq
	(*StopPlayBilliardRes)(nil),  // 9: pb.StopPlayBilliardRes
	(*AttachGood)(nil),           // 10: pb.AttachGood
	(*Good)(nil),                 // 11: pb.Good
	(*OrderReq)(nil),             // 12: pb.OrderReq
	(*OrderRes)(nil),             // 13: pb.OrderRes
	(*GetOrderGoodsReq)(nil),     // 14: pb.GetOrderGoodsReq
	(*GetOrderGoodsRes)(nil),     // 15: pb.GetOrderGoodsRes
}
var file_common_pb_mvp_proto_depIdxs = []int32{
	10, // 0: pb.Good.attachGoods:type_name -> pb.AttachGood
	11, // 1: pb.OrderReq.goods:type_name -> pb.Good
	11, // 2: pb.GetOrderGoodsRes.goods:type_name -> pb.Good
	0,  // 3: pb.Mvp.AddGood:input_type -> pb.AddGoodReq
	4,  // 4: pb.Mvp.AddBilliardDesk:input_type -> pb.AddBilliardDeskReq
	2,  // 5: pb.Mvp.SellGood:input_type -> pb.SellGoodReq
	6,  // 6: pb.Mvp.BeginPlayBilliard:input_type -> pb.BeginPlayBilliardReq
	8,  // 7: pb.Mvp.StopPlayBilliard:input_type -> pb.StopPlayBilliardReq
	12, // 8: pb.Mvp.Order:input_type -> pb.OrderReq
	14, // 9: pb.Mvp.GetOrderGoods:input_type -> pb.GetOrderGoodsReq
	1,  // 10: pb.Mvp.AddGood:output_type -> pb.AddGoodRes
	5,  // 11: pb.Mvp.AddBilliardDesk:output_type -> pb.AddBilliardDeskRes
	3,  // 12: pb.Mvp.SellGood:output_type -> pb.SellGoodRes
	7,  // 13: pb.Mvp.BeginPlayBilliard:output_type -> pb.BeginPlayBilliardRes
	9,  // 14: pb.Mvp.StopPlayBilliard:output_type -> pb.StopPlayBilliardRes
	13, // 15: pb.Mvp.Order:output_type -> pb.OrderRes
	15, // 16: pb.Mvp.GetOrderGoods:output_type -> pb.GetOrderGoodsRes
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_common_pb_mvp_proto_init() }
func file_common_pb_mvp_proto_init() {
	if File_common_pb_mvp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_pb_mvp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGoodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGoodRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellGoodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellGoodRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBilliardDeskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBilliardDeskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginPlayBilliardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginPlayBilliardRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPlayBilliardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPlayBilliardRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachGood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Good); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_mvp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_pb_mvp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_pb_mvp_proto_goTypes,
		DependencyIndexes: file_common_pb_mvp_proto_depIdxs,
		MessageInfos:      file_common_pb_mvp_proto_msgTypes,
	}.Build()
	File_common_pb_mvp_proto = out.File
	file_common_pb_mvp_proto_rawDesc = nil
	file_common_pb_mvp_proto_goTypes = nil
	file_common_pb_mvp_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MvpClient is the client API for Mvp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MvpClient interface {
	AddGood(ctx context.Context, in *AddGoodReq, opts ...grpc.CallOption) (*AddGoodRes, error)
	AddBilliardDesk(ctx context.Context, in *AddBilliardDeskReq, opts ...grpc.CallOption) (*AddBilliardDeskRes, error)
	SellGood(ctx context.Context, in *SellGoodReq, opts ...grpc.CallOption) (*SellGoodRes, error)
	BeginPlayBilliard(ctx context.Context, in *BeginPlayBilliardReq, opts ...grpc.CallOption) (*BeginPlayBilliardRes, error)
	StopPlayBilliard(ctx context.Context, in *StopPlayBilliardReq, opts ...grpc.CallOption) (*StopPlayBilliardRes, error)
	Order(ctx context.Context, in *OrderReq, opts ...grpc.CallOption) (*OrderRes, error)
	GetOrderGoods(ctx context.Context, in *GetOrderGoodsReq, opts ...grpc.CallOption) (*GetOrderGoodsRes, error)
}

type mvpClient struct {
	cc grpc.ClientConnInterface
}

func NewMvpClient(cc grpc.ClientConnInterface) MvpClient {
	return &mvpClient{cc}
}

func (c *mvpClient) AddGood(ctx context.Context, in *AddGoodReq, opts ...grpc.CallOption) (*AddGoodRes, error) {
	out := new(AddGoodRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/AddGood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mvpClient) AddBilliardDesk(ctx context.Context, in *AddBilliardDeskReq, opts ...grpc.CallOption) (*AddBilliardDeskRes, error) {
	out := new(AddBilliardDeskRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/AddBilliardDesk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mvpClient) SellGood(ctx context.Context, in *SellGoodReq, opts ...grpc.CallOption) (*SellGoodRes, error) {
	out := new(SellGoodRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/SellGood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mvpClient) BeginPlayBilliard(ctx context.Context, in *BeginPlayBilliardReq, opts ...grpc.CallOption) (*BeginPlayBilliardRes, error) {
	out := new(BeginPlayBilliardRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/BeginPlayBilliard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mvpClient) StopPlayBilliard(ctx context.Context, in *StopPlayBilliardReq, opts ...grpc.CallOption) (*StopPlayBilliardRes, error) {
	out := new(StopPlayBilliardRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/StopPlayBilliard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mvpClient) Order(ctx context.Context, in *OrderReq, opts ...grpc.CallOption) (*OrderRes, error) {
	out := new(OrderRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/Order", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mvpClient) GetOrderGoods(ctx context.Context, in *GetOrderGoodsReq, opts ...grpc.CallOption) (*GetOrderGoodsRes, error) {
	out := new(GetOrderGoodsRes)
	err := c.cc.Invoke(ctx, "/pb.Mvp/GetOrderGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MvpServer is the server API for Mvp service.
type MvpServer interface {
	AddGood(context.Context, *AddGoodReq) (*AddGoodRes, error)
	AddBilliardDesk(context.Context, *AddBilliardDeskReq) (*AddBilliardDeskRes, error)
	SellGood(context.Context, *SellGoodReq) (*SellGoodRes, error)
	BeginPlayBilliard(context.Context, *BeginPlayBilliardReq) (*BeginPlayBilliardRes, error)
	StopPlayBilliard(context.Context, *StopPlayBilliardReq) (*StopPlayBilliardRes, error)
	Order(context.Context, *OrderReq) (*OrderRes, error)
	GetOrderGoods(context.Context, *GetOrderGoodsReq) (*GetOrderGoodsRes, error)
}

// UnimplementedMvpServer can be embedded to have forward compatible implementations.
type UnimplementedMvpServer struct {
}

func (*UnimplementedMvpServer) AddGood(context.Context, *AddGoodReq) (*AddGoodRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGood not implemented")
}
func (*UnimplementedMvpServer) AddBilliardDesk(context.Context, *AddBilliardDeskReq) (*AddBilliardDeskRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBilliardDesk not implemented")
}
func (*UnimplementedMvpServer) SellGood(context.Context, *SellGoodReq) (*SellGoodRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellGood not implemented")
}
func (*UnimplementedMvpServer) BeginPlayBilliard(context.Context, *BeginPlayBilliardReq) (*BeginPlayBilliardRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeginPlayBilliard not implemented")
}
func (*UnimplementedMvpServer) StopPlayBilliard(context.Context, *StopPlayBilliardReq) (*StopPlayBilliardRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopPlayBilliard not implemented")
}
func (*UnimplementedMvpServer) Order(context.Context, *OrderReq) (*OrderRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Order not implemented")
}
func (*UnimplementedMvpServer) GetOrderGoods(context.Context, *GetOrderGoodsReq) (*GetOrderGoodsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderGoods not implemented")
}

func RegisterMvpServer(s *grpc.Server, srv MvpServer) {
	s.RegisterService(&_Mvp_serviceDesc, srv)
}

func _Mvp_AddGood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGoodReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).AddGood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/AddGood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).AddGood(ctx, req.(*AddGoodReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mvp_AddBilliardDesk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBilliardDeskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).AddBilliardDesk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/AddBilliardDesk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).AddBilliardDesk(ctx, req.(*AddBilliardDeskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mvp_SellGood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SellGoodReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).SellGood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/SellGood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).SellGood(ctx, req.(*SellGoodReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mvp_BeginPlayBilliard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeginPlayBilliardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).BeginPlayBilliard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/BeginPlayBilliard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).BeginPlayBilliard(ctx, req.(*BeginPlayBilliardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mvp_StopPlayBilliard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopPlayBilliardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).StopPlayBilliard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/StopPlayBilliard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).StopPlayBilliard(ctx, req.(*StopPlayBilliardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mvp_Order_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).Order(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/Order",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).Order(ctx, req.(*OrderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mvp_GetOrderGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderGoodsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MvpServer).GetOrderGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Mvp/GetOrderGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MvpServer).GetOrderGoods(ctx, req.(*GetOrderGoodsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mvp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Mvp",
	HandlerType: (*MvpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddGood",
			Handler:    _Mvp_AddGood_Handler,
		},
		{
			MethodName: "AddBilliardDesk",
			Handler:    _Mvp_AddBilliardDesk_Handler,
		},
		{
			MethodName: "SellGood",
			Handler:    _Mvp_SellGood_Handler,
		},
		{
			MethodName: "BeginPlayBilliard",
			Handler:    _Mvp_BeginPlayBilliard_Handler,
		},
		{
			MethodName: "StopPlayBilliard",
			Handler:    _Mvp_StopPlayBilliard_Handler,
		},
		{
			MethodName: "Order",
			Handler:    _Mvp_Order_Handler,
		},
		{
			MethodName: "GetOrderGoods",
			Handler:    _Mvp_GetOrderGoods_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common/pb/mvp.proto",
}
