syntax = "proto3";

package pb;


// todo: 折扣修改后，价格需要改变~

enum FavorType {
    NONE = 0;           // 无
    REBATE = 1;         // 打折
    FULL_REDUCTION = 2; // 满减
    FREE = 3;           // 免单
}

enum ElementType {
    Main = 0;
    Option = 1;
    Ingredient = 2;
}

enum BillingType {
    Timing = 0;
    Session = 1;
}

// ---------------------- instance 相关 ----------------------
message ExpenseInfo {
    double nonFavorExpense = 1;  // 未打折费用
    int64 checkOutTimestamp = 2; // 结账时间
    double expense = 3; // 打折后费用
}


message Order {
    int64 id = 1;
    Desk desk = 2;
    repeated Good goods = 3;
    repeated Favor favors = 4;
    ExpenseInfo expenseInfo = 5;
}

message Desk{
    int64 id = 1;
    Space space = 2;
    int64 startTimestamp = 3;
    int64 endTimestamp = 4;
    repeated Favor favors = 5;
    ExpenseInfo expenseInfo = 6;
}

message Good{
    int64 id = 1;
    Element mainElement = 2;
    repeated Element attachElements = 3;
    repeated Favor favors = 4;
    ExpenseInfo expenseInfo = 5;
}

message Space {
    string name = 1;
    int64 num = 2;
    double price = 3;
    BillingType billingType = 4;
    string  pictureStorePath = 5;
}

message GoodClass {
    string name = 1;
    string pictureStorePath = 2;
    //    repeated Good goods = 2;
}

message Element {
    string name = 1;
    ElementType type = 2;
    repeated SizeInfo sizeInfos = 3;
}

message SizeInfo {
    string size = 1;
    double price = 2;
    string pictureStorePath = 3;
    bool isSelected = 4;
}

message Favor {
    FavorType FavorType = 1;
    repeated string parameters = 2;
}

message  AddFavorForGoodReq {
    int64 goodID = 1;
    repeated Favor favors = 2;
}

message AddFavorForGoodRes{}

// 添加货物
message AddGoodReq {
    Good good = 1;
    string className = 2;
}

message AddGoodRes {}

message AddGoodClassReq{
    GoodClass goodClass = 1;
}

message AddGoodClassRes{}

message AddSpaceReq{
    Space space = 1;
}

message AddSpaceRes{}


message OrderGoodReq{
    int64 deskID = 1;
    int64 orderID = 2;
    repeated Good goods = 3;
}

message OrderGoodRes{
    // 这里可以返回 goods, 这些goods 有 goodID
}

message OrderDeskReq{
    Desk desk = 1;
}

message OrderDeskRes{
    int64 deskID = 1;
}

message OrderReq{
    Order order = 1;
}
message OrderRes{
    int64 orderID = 1;
}

message CloseDeskReq{
    int64 deskID = 1;
    int64 endTimestamp = 2;
}
message CloseDeskRes{}


message CancelGoodReq{
    repeated int64 goodIDs = 1;
}

message CancelGoodRes{
}

message GetAllGoodClassesReq{}
message GetAllGoodClassesRes{
    repeated GoodClass goodClasses = 1;
}


message GetOrderReq{
    int64 orderID = 1;
}

message GetOrderRes{
    Order order = 1;
}

message CheckOutReq {
    repeated  int64 GoodIDs = 1;
    repeated  int64 DeskIDs = 2;
}

message CheckOutRes {}

message AddElementReq {
    Element element = 1;
    string className = 2;
}
message AddElementRes {}

message ChangeDeskReq {
    int64 srcDeskID = 1;
    string dstSpaceName = 2;
    int64 dstSpaceNum = 3;
}

message ChangeDeskRes {}


message DeleteFavorForGoodReq {
    int64 goodID = 1;
    Favor favor = 2;
}

message DeleteFavorForGoodRes{}


message DeskClass {
    string name = 1;
    repeated Desk desks = 2;
}

message GetAllDeskClassesReq{}
message GetAllDeskClassesRes{
    repeated DeskClass deskClasses = 1;
}

message GetAllGoodsReq{
    string className = 1;
}

message GetAllGoodsRes{
    repeated Good goods = 1;
}

service Mvp {
    rpc GetAllGoodClasses(GetAllGoodClassesReq) returns (GetAllGoodClassesRes); // 获得所有商品类及其下的货物
    rpc GetAllGoods(GetAllGoodsReq) returns (GetAllGoodsRes);

    rpc AddGoodClass(AddGoodClassReq) returns (AddGoodClassRes);    // 添加商品类
    rpc AddGood(AddGoodReq) returns (AddGoodRes);                   // 添加货物
    rpc CancelGood(CancelGoodReq) returns(CancelGoodRes);    // 取消货物

    rpc AddElement(AddElementReq) returns(AddElementRes);       // 添加元素
    rpc AddSpace(AddSpaceReq) returns (AddSpaceRes);            // 添加桌位

    rpc OrderGood(OrderGoodReq) returns (OrderGoodRes);         // 预定货物
    rpc OrderDesk(OrderDeskReq) returns (OrderDeskRes);          // 预定桌位
    rpc ChangeDesk(ChangeDeskReq) returns (ChangeDeskRes);      // 换桌位
    rpc CloseDesk(CloseDeskReq) returns(CloseDeskRes);      // 退桌

    rpc GetOrder(GetOrderReq) returns(GetOrderRes);            // 获得订单信息 （如开桌时长、点单货物...）
    rpc CheckOut(CheckOutReq) returns(CheckOutRes);         // 结账

    rpc AddFavorForGood(AddFavorForGoodReq) returns(AddFavorForGoodRes);    // 为货物添加优惠
    rpc DeleteFavorForGood(DeleteFavorForGoodReq) returns(DeleteFavorForGoodRes);   // 删除货物的优惠

    rpc GetAllDeskClasses(GetAllDeskClassesReq) returns(GetAllDeskClassesRes);   // 获得所有桌、桌位
}

// todo: 增加桌位删除接口
// todo: 增加价格计算接口
// todo: 增加桌位获取接口